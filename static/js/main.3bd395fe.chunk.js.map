{"version":3,"sources":["BSTable.js","Table.js","remote-paging.js","remote-store-paging.js","remote-sorting.js","remote-store-sorting.js","index.js"],"names":["BSTable","_React$Component","_inherits","_super","_createSuper","_classCallCheck","this","apply","arguments","_createClass","key","value","console","log","props","data","React","createElement","BootstrapTable","TableHeaderColumn","dataField","isKey","Component","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","Table","_useState","useState","_useState2","_slicedToArray","userData","setUserData","_useState3","_useState4","copyUserData","setCopyUserData","_useState5","_useState6","childData","setChildData","_useState7","_useState8","currentPage","_useState9","_useState10","sizePerPage","setSizePerPage","_useState11","_useState12","activePage","setActivePage","_useState13","_useState14","noOfData","_useState15","_useState16","noOfAPICall","setNoOfAPICall","handlePaginationDropdown","currentTarget","textContent","fetchUserData","_ref","_asyncToGenerator","_callee","start","limit","res","_args","_context","undefined","Axios","get","concat","useEffect","expandedRows","options","onlyOneExpanding","paginationSize","onExpand","_ref2","_callee2","rowKey","isExpand","_context2","assign","isExpandableRow","id","_x","_x2","sizePerPageList","onPageChange","page","prePage","nextPage","firstPage","lastPage","totalSize","paginationShowsTotal","to","total","style","color","paginationPosition","alwaysShowAllBtns","withFirstAndLast","expandRowBgColor","expandBy","expandBodyClass","row","rowIndex","isExpanding","expandParentClass","className","Fragment","dataSort","hover","fetchInfo","dataTotalSize","trClassName","rowData","rIndex","expandableRow","expandComponent","expandColumnOptions","expandColumnVisible","expandColumnComponent","_ref3","isExpanded","content","columnWidth","expandedColumnHeaderComponent","_ref4","anyExpand","autoCollapse","sort","search","filter","expandable","Dropdown","float","paddingBottom","Toggle","variant","boxShadow","Menu","Item","onClick","display","justifyContent","Pagination","hideFirstLastPages","pageRangeDisplayed","itemsCountPerPage","totalItemsCount","onChange","clear","currentIndex","parseInt","innerClass","RemotePaging","remote","pagination","totalDataSize","onSizePerPageList","RemoteSorting","onSortChange","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3bd395fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\n\r\nclass BSTable extends React.Component {\r\n  render() {\r\n    console.log(\"props data\", this.props.data);\r\n    if (this.props.data) {\r\n      return (\r\n        <BootstrapTable data={this.props.data}>\r\n          <TableHeaderColumn dataField=\"id\" isKey={true}>\r\n            Field A\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"title\">Field B</TableHeaderColumn>\r\n          <TableHeaderColumn dataField=\"url\">Field C</TableHeaderColumn>\r\n        </BootstrapTable>\r\n      );\r\n    } else {\r\n      return <p>?</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default BSTable;\r\n","// https://jsfiddle.net/1s8reLw1/5/\n\nimport React, { useState, useEffect } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Axios from \"axios\";\nimport Pagination from \"react-js-pagination\";\n// import { products } from \"./products\";\nimport { Dropdown } from \"react-bootstrap\";\n// import { Pagination as RcPagination } from \"react-js-pagination\";\nimport BSTable from \"./BSTable\";\n// import { Pagination } from \"./Pagination\";\n\nfunction Table() {\n  /* Varibale Declaration */\n  const [userData, setUserData] = useState([]);\n  const [copyUserData, setCopyUserData] = useState([]);\n  const [childData, setChildData] = useState();\n  const [currentPage, setCurrentPage] = useState();\n  const [sizePerPage, setSizePerPage] = useState(100);\n  const [activePage, setActivePage] = useState(1);\n  const [noOfData, setNoOfData] = useState(1000);\n  const [noOfAPICall, setNoOfAPICall] = useState(0);\n  // const [sizePerPage, setSizePerPage] = useState(100);\n\n  const handlePageChange = e => {\n    console.clear();\n    setActivePage(e);\n    const currentIndex = (e - 1) * sizePerPage;\n    console.log(\n      \"123\",\n      e,\n      userData,\n      copyUserData,\n      currentIndex,\n      sizePerPage,\n      parseInt(currentIndex, 10) + parseInt(sizePerPage, 10)\n    );\n    setUserData(\n      copyUserData.slice(\n        currentIndex,\n        parseInt(currentIndex, 10) + parseInt(sizePerPage, 10)\n      )\n    );\n    // console.log(\n    //   \"123\",\n    //   copyUserData.slice(\n    //     currentIndex,\n    //     parseInt(currentIndex) + parseInt(sizePerPage)\n    //   )\n    // );\n    // temp1.slice((2-1)*10, (2-1)*10 + 10)\n  };\n\n  const handlePaginationDropdown = e => {\n    // console.clear();\n    setSizePerPage(e.currentTarget.textContent);\n    // console.log(\n    //   copyUserData.slice(0, e.currentTarget.textContent),\n    //   copyUserData\n    // );\n    setUserData(copyUserData.slice(0, e.currentTarget.textContent));\n  };\n\n  /* Fetch User Data */\n  const fetchUserData = async (start = 0, limit = 1000, type) => {\n    console.log(\"fetchUserData\", start, limit, type, sizePerPage);\n    // e !== undefined ? e.preventDefault() : null;\n    if (type === \"next\") {\n      setNoOfAPICall(noOfAPICall + 1);\n      // setNoOfData(noOfData + limit);\n    }\n    if (type === \"prev\") {\n      setNoOfAPICall(noOfAPICall - 1);\n      // setNoOfData(noOfData - limit);\n      // start = start - 1000;\n    }\n    console.log(\"start\", start);\n    var res = await Axios.get(\n      `https://jsonplaceholder.typicode.com/photos?_start=${start}&_limit=${limit}`\n    );\n    console.log(\"res\", res);\n    setUserData(res.data.slice(0, sizePerPage));\n    setActivePage(1);\n    setCopyUserData(res.data);\n  };\n\n  /* React Hooks */\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  /* Functional Declaration */\n  let expandedRows = {};\n\n  const renderShowsTotal = (start, to, total) => {\n    return (\n      <p style={{ color: \"blue\" }}>\n        From {start} to {to}, totals is {total}&nbsp;&nbsp;(its a customize\n        text)\n      </p>\n    );\n  };\n\n  const handleExpand = async (rowKey, isExpand) => {\n    expandedRows = Object.assign(\n      expandedRows,\n      (expandedRows[rowKey] = isExpand)\n    );\n    var res = await Axios.get(\n      `https://jsonplaceholder.typicode.com/photos?_start=${0}&_limit=${1}`\n    );\n    console.log(res);\n    setChildData(res.data);\n    // expandedRows[rowKey] = isExpand;\n    // console.log(expandedRows[rowKey], Object.keys(expandedRows).length);\n    // if (!(Object.keys(expandedRows).length === 0)) {\n    //   expandedRows = Object.assign({}, expandedRows[rowKey] = isExpand);\n    // } else {\n    //   expandedRows[rowKey] = isExpand;\n    // }\n    console.log(rowKey, isExpand, expandedRows);\n    console.log(\"handleClick\", isExpandableRow({ id: 4 }));\n  };\n\n  const onPageChange = (page, sizePerPage) => {\n    // setCurrentPage(page);\n    // console.log(\"onPageChange\", page, sizePerPage, userData);\n    // return false;\n    // fetchUserData((page - 1) * 10, sizePerPage);\n    // fetchUserData();\n  };\n\n  // const onSizePerPageList = sizePerPage => {\n  //   console.log(\"onSizePerPageList\", currentPage, sizePerPage);\n  //   // const currentIndex = (currentPage - 1) * sizePerPage;\n  //   // setUserData(userData.slice(currentIndex, currentIndex + sizePerPage));\n  //   // setSizePerPage(sizePerPage);\n  // };\n\n  // const onSortChange = (sortName, sortOrder) => {\n  //   console.log(sortName, sortOrder);\n  //   if (sortOrder === \"asc\") {\n  //     userData.sort((a, b) => {\n  //       if (parseInt(a[sortName], 10) > parseInt(b[sortName], 10)) {\n  //         return 1;\n  //       } else if (parseInt(b[sortName], 10) > parseInt(a[sortName], 10)) {\n  //         return -1;\n  //       }\n  //       return 0;\n  //     });\n  //   } else {\n  //     userData.sort((a, b) => {\n  //       if (parseInt(a[sortName], 10) > parseInt(b[sortName], 10)) {\n  //         return -1;\n  //       } else if (parseInt(b[sortName], 10) > parseInt(a[sortName], 10)) {\n  //         return 1;\n  //       }\n  //       return 0;\n  //     });\n  //   }\n  // };\n\n  const options = {\n    onlyOneExpanding: true,\n    // onSizePerPageList: onSizePerPageList,\n    //hideSizePerPage: true,\n    paginationSize: 1,\n    onExpand: handleExpand,\n    sizePerPageList: [15, 10],\n    // sizePerPageList: [\n    //   {\n    //     text: \"5\",\n    //     value: 5\n    //   },\n    //   {\n    //     text: \"10\",\n    //     value: 10\n    //   },\n    //   {\n    //     text: \"All\",\n    //     value: userData.length\n    //   }\n    // ],\n    onPageChange: onPageChange,\n    sizePerPage: 15, // which size per page you want to locate as default\n    // pageStartIndex: 0, // where to start counting the pages\n    // paginationSize: 3,  // the pagination bar size.\n    prePage: \"Prev\", // Previous page button text\n    nextPage: \"Next\", // Next page button text\n    firstPage: \"First\", // First page button text\n    lastPage: \"Last\", // Last page button text\n    totalSize: 100,\n    paginationShowsTotal: renderShowsTotal, // Accept bool or function\n    paginationPosition: \"top\", // default is bottom, top and both is all available\n    //hideSizePerPage: true, // You can hide the dropdown for sizePerPage\n    alwaysShowAllBtns: true, // Always show next and previous button\n    withFirstAndLast: currentPage === 4 ? true : false, // Hide the going to First and Last page button\n    expandRowBgColor: \"rgb(242, 255, 163)\",\n    expandBy: \"column\", // Currently, available value is row and column, default is row\n    expandBodyClass: function(row, rowIndex, isExpanding) {\n      if (!isExpanding) {\n        return \"current-is-hidden\";\n      } else {\n        if (rowIndex > 1) {\n          return \"custom-expand-body-1\";\n        } else {\n          return \"custom-expand-body-0\";\n        }\n      }\n    },\n    expandParentClass: function(row, rowIndex, isExpanding) {\n      return isExpandableRow(row);\n    }\n    // onSortChange: onSortChange\n  };\n\n  const isExpandableRow = row => {\n    // console.log(\"isExpandableRow\", row);\n    if (row.id < 3) return true;\n    else return false;\n  };\n\n  const expandComponent = (row, e) => {\n    console.log(\"expandComponent\", row, e);\n    if (row.id === true) {\n      return <BSTable data={childData} />;\n    }\n  };\n\n  const expandColumnComponent = ({ isExpandableRow, isExpanded }) => {\n    let content = \"\";\n    console.log(\"expandColumnComponent\", isExpandableRow, isExpanded);\n    if (isExpandableRow) {\n      content = isExpanded ? \"(-)\" : \"(+)\";\n    } else {\n      content = \" \";\n    }\n    return <div> {content} </div>;\n  };\n\n  const expandedColumnHeaderComponent = ({ anyExpand }) => {\n    const content = anyExpand ? \"(-)\" : \"(+)\";\n    return <div>{content}</div>;\n  };\n\n  const trClassFormat = (rowData, rIndex) => {\n    return !isExpandableRow(rowData) ? \"disable-row-cell\" : \"\";\n  };\n\n  console.log(\"copyUserData\", copyUserData, userData);\n\n  return (\n    <div className=\"react-bootstrap-table container mt-4\">\n      <h2>React Bootstrap Table with pagination</h2>\n      {userData.length > 0 ? (\n        <React.Fragment>\n          <BootstrapTable\n            dataSort={true}\n            hover\n            // remote={true}\n            fetchInfo={{ dataTotalSize: 1000 }}\n            trClassName={trClassFormat}\n            data={userData}\n            // pagination\n            options={options}\n            expandableRow={isExpandableRow}\n            expandComponent={expandComponent}\n            expandColumnOptions={{\n              expandColumnVisible: true,\n              expandColumnComponent: expandColumnComponent,\n              columnWidth: 50,\n              expandedColumnHeaderComponent: expandedColumnHeaderComponent\n            }}\n            autoCollapse={{ sort: true, search: true, filter: true }}\n            search\n          >\n            <TableHeaderColumn expandable={false} dataField=\"id\" isKey={true}>\n              User ID\n            </TableHeaderColumn>\n            <TableHeaderColumn expandable={false} dataField=\"title\">\n              User Title\n            </TableHeaderColumn>\n            <TableHeaderColumn expandable={false} dataField=\"url\">\n              User URL\n            </TableHeaderColumn>\n          </BootstrapTable>\n          <div>\n            <Dropdown style={{ float: \"left\", paddingBottom: \".5rem\" }}>\n              <Dropdown.Toggle\n                variant=\"default\"\n                className=\"\n              border mt-3\"\n                id=\"dropdown-basic\"\n                style={{ boxShadow: \"none\" }}\n              >\n                {sizePerPage}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={e => handlePaginationDropdown(e)}>\n                  100\n                </Dropdown.Item>\n                <Dropdown.Item onClick={e => handlePaginationDropdown(e)}>\n                  50\n                </Dropdown.Item>\n                <Dropdown.Item onClick={e => handlePaginationDropdown(e)}>\n                  25\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {noOfAPICall > 0 ? (\n                <button\n                  className=\"external-pagination-btn pagination-btn-prev\"\n                  onClick={e =>\n                    fetchUserData((noOfAPICall - 1) * noOfData, 1000, \"prev\")\n                  }\n                >\n                  Prev\n                </button>\n              ) : null}\n              <Pagination\n                // hideDisabled={hideDisabled}\n                // hideNavigation={hideNavigation}\n                hideFirstLastPages\n                // prevPageText={prevPageText}\n                // nextPageText={nextPageText}\n                // firstPageText={firstPageText}\n                // lastPageText={lastPageText}\n                pageRangeDisplayed={1}\n                activePage={activePage}\n                itemsCountPerPage={sizePerPage}\n                totalItemsCount={copyUserData.length}\n                onChange={handlePageChange}\n                innerClass=\"mt-2 pagination\"\n              />\n              {copyUserData.length / sizePerPage === activePage ? (\n                <button\n                  className=\"external-pagination-btn pagination-btn-next\"\n                  onClick={e =>\n                    fetchUserData((noOfAPICall + 1) * noOfData, 1000, \"next\")\n                  }\n                >\n                  Next\n                </button>\n              ) : null}\n            </div>\n          </div>\n        </React.Fragment>\n      ) : (\n        <i className=\"fa fa-spinner fa-3x fa-spin\" />\n      )}\n    </div>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\n\r\nexport default class RemotePaging extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BootstrapTable\r\n        data={this.props.data}\r\n        remote={true}\r\n        pagination={true}\r\n        fetchInfo={{ dataTotalSize: this.props.totalDataSize }}\r\n        options={{\r\n          sizePerPage: this.props.sizePerPage,\r\n          onPageChange: this.props.onPageChange,\r\n          sizePerPageList: [5, 10],\r\n          page: this.props.currentPage,\r\n          onSizePerPageList: this.props.onSizePerPageList\r\n        }}\r\n      >\r\n        <TableHeaderColumn dataField=\"id\" isKey={true}>\r\n          Product ID\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"name\">Product Name</TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"price\">Product Price</TableHeaderColumn>\r\n      </BootstrapTable>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport RemotePaging from \"./remote-paging\";\r\n\r\nfunction getProducts() {\r\n  const products = [];\r\n  const startId = products.length;\r\n  for (let i = 0; i < 12; i++) {\r\n    const id = startId + i;\r\n    products.push({\r\n      id: id,\r\n      name: \"Item name \" + id,\r\n      price: Math.floor(Math.random() * 2000 + 1)\r\n    });\r\n  }\r\n  return products;\r\n}\r\n\r\nexport default class RemoteStorePaging extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.products = getProducts();\r\n    this.state = {\r\n      data: this.products.slice(0, this.props.sizePerPage),\r\n      totalDataSize: this.products.length,\r\n      sizePerPage: this.props.sizePerPage,\r\n      currentPage: 1\r\n    };\r\n  }\r\n\r\n  onPageChange(page, sizePerPage) {\r\n    const currentIndex = (page - 1) * sizePerPage;\r\n    this.setState({\r\n      data: this.products.slice(currentIndex, currentIndex + sizePerPage),\r\n      currentPage: page\r\n    });\r\n  }\r\n\r\n  onSizePerPageList(sizePerPage) {\r\n    const currentIndex = (this.state.currentPage - 1) * sizePerPage;\r\n    this.setState({\r\n      data: this.products.slice(currentIndex, currentIndex + sizePerPage),\r\n      sizePerPage: sizePerPage\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <RemotePaging\r\n        onPageChange={this.onPageChange.bind(this)}\r\n        onSizePerPageList={this.onSizePerPageList.bind(this)}\r\n        {...this.state}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\n\r\nexport default class RemoteSorting extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BootstrapTable\r\n        data={this.props.data}\r\n        remote={true}\r\n        options={{ onSortChange: this.props.onSortChange }}\r\n      >\r\n        <TableHeaderColumn dataField=\"id\" isKey={true} dataSort={true}>\r\n          Product ID\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"name\" dataSort={true}>\r\n          Product Name\r\n        </TableHeaderColumn>\r\n        <TableHeaderColumn dataField=\"price\" dataSort={true}>\r\n          Product Price\r\n        </TableHeaderColumn>\r\n      </BootstrapTable>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport RemoteSorting from \"./remote-sorting\";\r\n\r\nfunction getProducts() {\r\n  const products = [];\r\n  const startId = products.length;\r\n  for (let i = 0; i < 12; i++) {\r\n    const id = startId + i;\r\n    products.push({\r\n      id: id,\r\n      name: \"Item name \" + id,\r\n      price: Math.floor(Math.random() * 2000 + 1)\r\n    });\r\n  }\r\n  return products;\r\n}\r\n\r\nexport default class RemoteStoreSorting extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.products = getProducts();\r\n    this.state = {\r\n      data: this.products\r\n    };\r\n  }\r\n\r\n  onSortChange(sortName, sortOrder) {\r\n    console.log(sortName, sortOrder, this.products);\r\n    if (sortOrder === \"asc\") {\r\n      this.products.sort(function(a, b) {\r\n        if (a[sortName] > b[sortName]) {\r\n          return 1;\r\n        } else if (b[sortName] > a[sortName]) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else {\r\n      this.products.sort(function(a, b) {\r\n        if (a[sortName] > b[sortName]) {\r\n          return -1;\r\n        } else if (b[sortName] > a[sortName]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      data: this.products\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <RemoteSorting\r\n        onSortChange={this.onSortChange.bind(this)}\r\n        {...this.state}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Table from \"./Table\";\nimport RemoteStorePaging from \"./remote-store-paging\";\n// import ExpandRow from \"./ExpandRow\";\nimport RemoteSorting from \"./remote-store-sorting\"; // working\n\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App m-4\">\n      {/* <RemoteSorting /> */}\n      <Table />\n      {/* <RemoteStorePaging /> */}\n      {/* <ExpandRow /> */}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}